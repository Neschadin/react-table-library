{"version":3,"file":"useIdReducer-b30a10da.js","sources":["../src/common/util/tree/includesAll.js","../src/common/util/useIdReducer.js"],"sourcesContent":["export const includesAll = (idsOne, idsTwo) => {\n  return idsOne.every((id) => idsTwo.includes(id));\n};\n","import * as React from 'react';\n\nimport { findNodeById } from './tree/findNodeById';\nimport { fromTreeToList } from './tree/fromTreeToList';\nimport { includesAll } from './tree/includesAll';\nimport { useSyncControlledState } from './useSyncControlledState';\nimport { useReducerWithMiddleware } from './useReducerWithMiddleware';\n\nconst addById = (state, action) => {\n  return {\n    ...state,\n    id: null,\n    ids: state.ids.concat(action.payload.id),\n  };\n};\n\nconst removeById = (state, action) => {\n  return {\n    ...state,\n    id: null,\n    ids: state.ids.filter((id) => id !== action.payload.id),\n  };\n};\n\nconst addByIdRecursively = (state, action) => {\n  const ids =\n    action.payload.options.isCarryForward && state.id != null\n      ? [...new Set(action.payload.ids.concat(state.id))]\n      : state.ids.concat(action.payload.ids);\n\n  return {\n    ...state,\n    id: null,\n    ids,\n  };\n};\n\nconst removeByIdRecursively = (state, action) => {\n  return {\n    ...state,\n    id: null,\n    ids: state.ids.filter((id) => !action.payload.ids.includes(id)),\n  };\n};\n\nconst addByIdExclusively = (state, action) => {\n  return {\n    ...state,\n    id: action.payload.id,\n    ids: [],\n  };\n};\n\nconst removeByIdExclusively = (state) => {\n  return {\n    ...state,\n    id: null,\n    ids: [],\n  };\n};\n\nconst addAll = (state, action) => {\n  return {\n    ...state,\n    id: null,\n    ids: [...new Set([...state.ids, ...action.payload.ids])],\n  };\n};\n\nconst removeAll = (state) => {\n  return {\n    ...state,\n    id: null,\n    ids: [],\n  };\n};\n\nconst set = (state, action) => ({ ...state, ...action.payload });\n\nconst ADD_BY_ID = 'ADD_BY_ID';\nconst REMOVE_BY_ID = 'REMOVE_BY_ID';\nconst ADD_BY_ID_RECURSIVELY = 'ADD_BY_ID_RECURSIVELY';\nconst REMOVE_BY_ID_RECURSIVELY = 'REMOVE_BY_ID_RECURSIVELY';\nconst ADD_BY_ID_EXCLUSIVELY = 'ADD_BY_ID_EXCLUSIVELY';\nconst REMOVE_BY_ID_EXCLUSIVELY = 'REMOVE_BY_ID_EXCLUSIVELY';\nconst ADD_ALL = 'ADD_ALL';\nconst REMOVE_ALL = 'REMOVE_ALL';\nconst SET = 'SET';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case ADD_BY_ID: {\n      return addById(state, action);\n    }\n    case REMOVE_BY_ID: {\n      return removeById(state, action);\n    }\n    case ADD_BY_ID_RECURSIVELY: {\n      return addByIdRecursively(state, action);\n    }\n    case REMOVE_BY_ID_RECURSIVELY: {\n      return removeByIdRecursively(state, action);\n    }\n    case ADD_BY_ID_EXCLUSIVELY: {\n      return addByIdExclusively(state, action);\n    }\n    case REMOVE_BY_ID_EXCLUSIVELY: {\n      return removeByIdExclusively(state, action);\n    }\n    case ADD_ALL: {\n      return addAll(state, action);\n    }\n    case REMOVE_ALL: {\n      return removeAll(state, action);\n    }\n    case SET: {\n      return set(state, action);\n    }\n    default:\n      throw new Error();\n  }\n};\n\nconst useIdReducer = (data, controlledState, onChange, context) => {\n  const [state, dispatchWithMiddleware] = useReducerWithMiddleware(\n    reducer,\n    controlledState,\n    [],\n    [onChange],\n    context\n  );\n\n  const onAddById = React.useCallback(\n    (id) =>\n      dispatchWithMiddleware({\n        type: ADD_BY_ID,\n        payload: { id },\n      }),\n    [dispatchWithMiddleware]\n  );\n\n  const onRemoveById = React.useCallback(\n    (id) =>\n      dispatchWithMiddleware({\n        type: REMOVE_BY_ID,\n        payload: { id },\n      }),\n    [dispatchWithMiddleware]\n  );\n\n  const onToggleById = React.useCallback(\n    (id) =>\n      state.ids.includes(id) ? onRemoveById(id) : onAddById(id),\n    [state, onAddById, onRemoveById]\n  );\n\n  const onAddByIdRecursively = React.useCallback(\n    (ids, options) => {\n      const DEFAULT_OPTIONS = {\n        isCarryForward: false,\n      };\n\n      const mergedOptions = {\n        ...DEFAULT_OPTIONS,\n        ...options,\n      };\n\n      dispatchWithMiddleware({\n        type: ADD_BY_ID_RECURSIVELY,\n        payload: {\n          ids,\n          options: mergedOptions,\n        },\n      });\n    },\n    [dispatchWithMiddleware]\n  );\n\n  const onRemoveByIdRecursively = React.useCallback(\n    (ids) => {\n      dispatchWithMiddleware({\n        type: REMOVE_BY_ID_RECURSIVELY,\n        payload: { ids },\n      });\n    },\n    [dispatchWithMiddleware]\n  );\n\n  const onToggleByIdRecursively = React.useCallback(\n    (id, options) => {\n      const DEFAULT_OPTIONS = {\n        isCarryForward: false,\n      };\n\n      const mergedOptions = {\n        ...DEFAULT_OPTIONS,\n        ...options,\n      };\n\n      const node = findNodeById(data.nodes, id);\n\n      const ids = [node, ...fromTreeToList(node.nodes)].map(\n        (item) => item.id\n      );\n\n      if (includesAll(ids, state.ids)) {\n        onRemoveByIdRecursively(ids);\n      } else {\n        onAddByIdRecursively(ids, mergedOptions);\n      }\n    },\n    [data, state, onAddByIdRecursively, onRemoveByIdRecursively]\n  );\n\n  const onAddByIdExclusively = React.useCallback(\n    (id) => {\n      dispatchWithMiddleware({\n        type: ADD_BY_ID_EXCLUSIVELY,\n        payload: { id },\n      });\n    },\n    [dispatchWithMiddleware]\n  );\n\n  const onRemoveByIdExclusively = React.useCallback(() => {\n    dispatchWithMiddleware({\n      type: REMOVE_BY_ID_EXCLUSIVELY,\n    });\n  }, [dispatchWithMiddleware]);\n\n  const onToggleByIdExclusively = React.useCallback(\n    (id) => {\n      if (id === state.id) {\n        onRemoveByIdExclusively();\n      } else {\n        onAddByIdExclusively(id);\n      }\n    },\n    [state, onRemoveByIdExclusively, onAddByIdExclusively]\n  );\n\n  const onAddAll = React.useCallback(\n    (ids) => {\n      dispatchWithMiddleware({\n        type: ADD_ALL,\n        payload: { ids },\n      });\n    },\n    [dispatchWithMiddleware]\n  );\n\n  const onRemoveAll = React.useCallback(() => {\n    dispatchWithMiddleware({\n      type: REMOVE_ALL,\n    });\n  }, [dispatchWithMiddleware]);\n\n  const onToggleAll = React.useCallback(() => {\n    const ids = fromTreeToList(data.nodes).map((item) => item.id);\n\n    if (includesAll(ids, state.ids)) {\n      onRemoveAll();\n    } else {\n      onAddAll(ids);\n    }\n  }, [data, state, onAddAll, onRemoveAll]);\n\n  useSyncControlledState(controlledState, state, () =>\n    dispatchWithMiddleware({\n      type: SET,\n      payload: controlledState,\n    })\n  );\n\n  const none = !state.ids.length;\n\n  const all =\n    !!data.nodes.length &&\n    includesAll(\n      data.nodes.map((item) => item.id),\n      state.ids\n    );\n\n  const fns = React.useMemo(\n    () => ({\n      onAddById,\n      onRemoveById,\n      onToggleById,\n\n      onAddByIdRecursively,\n      onRemoveByIdRecursively,\n      onToggleByIdRecursively,\n\n      onAddByIdExclusively,\n      onRemoveByIdExclusively,\n      onToggleByIdExclusively,\n\n      onAddAll,\n      onRemoveAll,\n      onToggleAll,\n    }),\n    [\n      onAddAll,\n      onAddById,\n      onAddByIdRecursively,\n      onRemoveAll,\n      onRemoveById,\n      onRemoveByIdRecursively,\n      onAddByIdExclusively,\n      onRemoveByIdExclusively,\n      onToggleByIdExclusively,\n      onToggleAll,\n      onToggleById,\n      onToggleByIdRecursively,\n    ]\n  );\n\n  return [{ ...state, none, all }, fns];\n};\n\nexport { useIdReducer };\n"],"names":["includesAll","idsOne","idsTwo","every","id","includes","reducer","state","action","type","ids","concat","payload","addById","filter","removeById","options","isCarryForward","Set","addByIdRecursively","removeByIdRecursively","addByIdExclusively","removeByIdExclusively","addAll","removeAll","set","Error","useIdReducer","data","controlledState","onChange","context","useReducerWithMiddleware","dispatchWithMiddleware","onAddById","React","useCallback","onRemoveById","onToggleById","onAddByIdRecursively","mergedOptions","onRemoveByIdRecursively","onToggleByIdRecursively","node","findNodeById","nodes","fromTreeToList","map","item","onAddByIdExclusively","onRemoveByIdExclusively","onToggleByIdExclusively","onAddAll","onRemoveAll","onToggleAll","useSyncControlledState","none","length","all","fns","useMemo"],"mappings":"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"}