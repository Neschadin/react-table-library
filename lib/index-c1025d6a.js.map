{"version":3,"file":"index-c1025d6a.js","sources":["../src/sort/config.js","../src/sort/SortButton.js","../src/sort/HeaderCellSort.js","../src/common/icons/IconChevronSingleUp.js","../src/common/icons/IconChevronSingleUpDown.js","../src/sort/useSort.js"],"sourcesContent":["export const SORT_ICON_POSITIONS = {\n  Prefix: 'Prefix',\n  Suffix: 'Suffix',\n};\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport cs from 'classnames';\n\nimport { Button } from '@table-library/react-table-library/common/components/Button';\n\nimport { SORT_ICON_POSITIONS } from './config';\n\nconst getSortIcon = (\n  sortState,\n  sortKey,\n  sortIconSize,\n  SortIconDefault,\n  SortIconUp,\n  SortIconDown\n) => {\n  const size = {\n    height: `${sortIconSize}`,\n    width: `${sortIconSize}`,\n  };\n\n  if (sortState.sortKey === sortKey && sortState.reverse) {\n    return SortIconDown\n      ? React.cloneElement(SortIconDown, { ...size })\n      : null;\n  }\n\n  if (sortState.sortKey === sortKey && !sortState.reverse) {\n    return SortIconUp\n      ? React.cloneElement(SortIconUp, { ...size })\n      : null;\n  }\n\n  return SortIconDefault\n    ? React.cloneElement(SortIconDefault, { ...size })\n    : null;\n};\n\nconst SortButton = ({\n  sort,\n  sortFn,\n  sortKey,\n  sortIcon = {},\n  children,\n}) => {\n  const { state, fns, _options } = sort;\n\n  const mergedSortIconOptions = {\n    ..._options.sortIcon,\n    ...sortIcon,\n  };\n\n  const prefix =\n    mergedSortIconOptions.position === SORT_ICON_POSITIONS.Prefix;\n  const suffix =\n    mergedSortIconOptions.position === SORT_ICON_POSITIONS.Suffix;\n\n  const icon = getSortIcon(\n    state,\n    sortKey,\n    mergedSortIconOptions.size,\n    mergedSortIconOptions.iconDefault,\n    mergedSortIconOptions.iconUp,\n    mergedSortIconOptions.iconDown\n  );\n\n  const handleToggleSort = () =>\n    fns.onToggleSort({ sortFn, sortKey });\n\n  return (\n    <Button\n      className={cs({\n        active: state.sortKey === sortKey,\n        prefix,\n        suffix,\n      })}\n      margin={mergedSortIconOptions.margin}\n      onClick={handleToggleSort}\n    >\n      {prefix && icon && <span>{icon}</span>}\n      <div title={children}>{children}</div>\n      {suffix && icon && <span>{icon}</span>}\n    </Button>\n  );\n};\n\nSortButton.propTypes = {\n  sort: PropTypes.objectOf(PropTypes.any),\n  sortKey: PropTypes.string,\n  sortFn: PropTypes.func,\n  sortIcon: PropTypes.shape({\n    position: PropTypes.oneOf(Object.values(SORT_ICON_POSITIONS)),\n    margin: PropTypes.string,\n    size: PropTypes.string,\n    iconDefault: PropTypes.node,\n    iconUp: PropTypes.node,\n    iconDown: PropTypes.node,\n  }),\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n    PropTypes.func,\n  ]),\n};\n\nexport { SortButton };\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { SortContext } from '@table-library/react-table-library/common/context/Sort';\nimport { HeaderCell } from '@table-library/react-table-library/table/Cell';\n\nimport { SortButton } from './SortButton';\nimport { SORT_ICON_POSITIONS } from './config';\n\nconst HeaderCellSort = React.memo(\n  ({ sortKey, sortFn, sortIcon = {}, children, ...passThrough }) => {\n    const sort = React.useContext(SortContext);\n\n    return (\n      <HeaderCell {...passThrough}>\n        <SortButton\n          sort={sort}\n          sortKey={sortKey}\n          sortFn={sortFn}\n          sortIcon={sortIcon}\n        >\n          {children}\n        </SortButton>\n      </HeaderCell>\n    );\n  }\n);\n\nHeaderCellSort.propTypes = {\n  sortKey: PropTypes.string,\n  sortFn: PropTypes.func,\n  sortIcon: PropTypes.shape({\n    position: PropTypes.oneOf(Object.values(SORT_ICON_POSITIONS)),\n    margin: PropTypes.string,\n    size: PropTypes.string,\n    iconDefault: PropTypes.node,\n    iconUp: PropTypes.node,\n    iconDown: PropTypes.node,\n  }),\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n    PropTypes.func,\n  ]),\n};\n\nexport { HeaderCellSort };\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\n\nconst IconChevronSingleUp = ({\n  width,\n  height,\n  viewBox,\n  strokeWidth,\n  style,\n}) => {\n  return (\n    <svg\n      id=\"svg-icon-chevron-single-up\"\n      data-name=\"svg-icon-chevron-single-up\"\n      data-testid=\"svg-icon-chevron-single-up\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={width || '36rem'}\n      height={height || '36rem'}\n      viewBox={viewBox || '0 0 36 36'}\n      strokeWidth={strokeWidth || '0rem'}\n      style={style || null}\n    >\n      <polygon points=\"36 21 36 24 18 15 0 24 0 21 18 12 36 21\" />\n    </svg>\n  );\n};\n\nIconChevronSingleUp.propTypes = {\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  strokeWidth: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  style: PropTypes.objectOf(PropTypes.string),\n  viewBox: PropTypes.string,\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nexport default IconChevronSingleUp;\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\n\nconst IconChevronSingleUpDown = ({\n  width,\n  height,\n  viewBox,\n  strokeWidth,\n  style,\n}) => {\n  return (\n    <svg\n      id=\"svg-icon-chevron-single-up-down\"\n      data-name=\"svg-icon-chevron-single-up-down\"\n      data-testid=\"svg-icon-chevron-single-up-down\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={width || '36rem'}\n      height={height || '36rem'}\n      viewBox={viewBox || '0 0 36 36'}\n      strokeWidth={strokeWidth || '0rem'}\n      style={style || null}\n    >\n      <polygon points=\"36 12 36 15 18 6 0 15 0 12 18 3 36 12\" />\n      <polygon points=\"0 24 0 21 18 30 36 21 36 24 18 33 0 24\" />\n    </svg>\n  );\n};\n\nIconChevronSingleUpDown.propTypes = {\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  strokeWidth: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  style: PropTypes.objectOf(PropTypes.string),\n  viewBox: PropTypes.string,\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\nexport default IconChevronSingleUpDown;\n","import * as React from 'react';\n\nimport { useReducerWithMiddleware } from '@table-library/react-table-library/common/util/useReducerWithMiddleware';\nimport { useSyncControlledState } from '@table-library/react-table-library/common/util//useSyncControlledState';\nimport { useSyncRefState } from '@table-library/react-table-library/common/util/useSyncRefState';\nimport IconChevronSingleDown from '@table-library/react-table-library/common/icons/IconChevronSingleDown';\nimport IconChevronSingleUp from '@table-library/react-table-library/common/icons/IconChevronSingleUp';\nimport IconChevronSingleUpDown from '@table-library/react-table-library/common/icons/IconChevronSingleUpDown';\n\nimport { SORT_ICON_POSITIONS } from './config';\n\nconst TOGGLE_SORT = 'TOGGLE_SORT';\nconst SET = 'SET';\n\nconst toggleSort = (state, action) => {\n  const reverse =\n    action.payload.sortKey === state.sortKey && !state.reverse;\n\n  return {\n    ...action.payload,\n    reverse,\n  };\n};\n\nconst set = (state, action) => ({ ...state, ...action.payload });\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case TOGGLE_SORT: {\n      return toggleSort(state, action);\n    }\n    case SET: {\n      return set(state, action);\n    }\n    default:\n      throw new Error();\n  }\n};\n\nconst DEFAULT_STATE = {\n  sortKey: 'NONE',\n  reverse: false,\n};\n\nconst DEFAULT_SORT_ICON = {\n  position: SORT_ICON_POSITIONS.Suffix,\n  margin: '4px',\n  size: '14px',\n  iconDefault: <IconChevronSingleUpDown />,\n  iconUp: <IconChevronSingleUp />,\n  iconDown: <IconChevronSingleDown />,\n};\n\nconst DEFAULT_OPTIONS = {\n  isServer: false,\n  sortIcon: DEFAULT_SORT_ICON,\n};\n\nconst useSort = (data, primary = {}, options = {}, context) => {\n  const primaryNullFallback = primary || {};\n  const controlledState = {\n    ...DEFAULT_STATE,\n    ...primaryNullFallback.state,\n  };\n  const onChange = primaryNullFallback.onChange || (() => {});\n\n  const [state, dispatchWithMiddleware] = useReducerWithMiddleware(\n    reducer,\n    controlledState,\n    [],\n    [onChange],\n    context\n  );\n\n  const onToggleSort = React.useCallback(\n    (value) =>\n      dispatchWithMiddleware({\n        type: TOGGLE_SORT,\n        payload: value,\n      }),\n    [dispatchWithMiddleware]\n  );\n\n  useSyncControlledState(controlledState, state, () =>\n    dispatchWithMiddleware({\n      type: SET,\n      payload: controlledState,\n    })\n  );\n\n  const sortFn = React.useCallback(\n    (nodes, sortFns, isRecursive) => {\n      const sortFnCurrent = sortFns[state.sortKey];\n\n      const sortFnWithFallback = sortFnCurrent || ((array) => array);\n\n      const sortFnReverse = state.reverse\n        ? (array) => sortFnWithFallback(array).reverse()\n        : sortFnWithFallback;\n\n      return sortFnReverse(nodes).reduce((acc, value) => {\n        if (isRecursive && value.nodes) {\n          return acc.concat({\n            ...value,\n            nodes: sortFn(value.nodes, sortFns, isRecursive),\n          });\n        }\n\n        return acc.concat(value);\n      }, []);\n    },\n    [state]\n  );\n\n  const fns = React.useMemo(\n    () => ({\n      onToggleSort,\n    }),\n    [onToggleSort]\n  );\n\n  useSyncRefState('sort', context, state);\n\n  const mergedOptions = {\n    ...DEFAULT_OPTIONS,\n    ...options,\n    sortIcon: {\n      ...DEFAULT_SORT_ICON,\n      ...options.sortIcon,\n    },\n  };\n\n  return {\n    state: { ...state, sortFn },\n    fns,\n    _options: mergedOptions,\n  };\n};\n\nexport { useSort };\n"],"names":["SORT_ICON_POSITIONS","Prefix","Suffix","SortButton","sort","sortFn","sortKey","sortIcon","children","state","fns","mergedSortIconOptions","_options","prefix","position","suffix","icon","sortState","sortIconSize","SortIconDefault","SortIconUp","SortIconDown","size","height","width","reverse","React","cloneElement","getSortIcon","iconDefault","iconUp","iconDown","Button","className","cs","active","margin","onClick","onToggleSort","title","propTypes","PropTypes","objectOf","any","string","func","shape","oneOf","Object","values","node","oneOfType","arrayOf","HeaderCellSort","memo","passThrough","useContext","SortContext","HeaderCell","IconChevronSingleUp","viewBox","strokeWidth","style","id","xmlns","points","number","IconChevronSingleUpDown","reducer","action","type","payload","toggleSort","set","Error","DEFAULT_STATE","DEFAULT_SORT_ICON","IconChevronSingleDown","DEFAULT_OPTIONS","isServer","useSort","data","primary","options","context","primaryNullFallback","controlledState","onChange","useReducerWithMiddleware","dispatchWithMiddleware","useCallback","value","useSyncControlledState","nodes","sortFns","isRecursive","sortFnWithFallback","array","reduce","acc","concat","useMemo","useSyncRefState","mergedOptions"],"mappings":"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"}